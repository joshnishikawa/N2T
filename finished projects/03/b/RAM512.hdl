// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM512[address(t)](t)
 *     Write: If load(t-1) then RAM512[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load == 1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
	RAM64(in=in, load=a, address=address[3..8], out=outa);
	RAM64(in=in, load=b, address=address[3..8], out=outb);
	RAM64(in=in, load=c, address=address[3..8], out=outc);
	RAM64(in=in, load=d, address=address[3..8], out=outd);
	RAM64(in=in, load=e, address=address[3..8], out=oute);
	RAM64(in=in, load=f, address=address[3..8], out=outf);
	RAM64(in=in, load=g, address=address[3..8], out=outg);
	RAM64(in=in, load=h, address=address[3..8], out=outh);
	Mux8Way16(a=outa, b=outb, c=outc, d=outd, e=oute, f=outf, g=outg, h=outh, sel=address[0..2], out=out);
}
